// <auto-generated />
using System;
using BilgeAdamBanka.DAL.ContextClasses;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BilgeAdamBanka.DAL.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BilgeAdamBanka.ENTITIES.Models.UserCardInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CVC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CardLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpiryMonth")
                        .HasColumnType("int");

                    b.Property<int>("ExpiryYear")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserCardInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 8600m,
                            CVC = "123",
                            CardLimit = 8600m,
                            CardNumber = "1234567890123456",
                            CardUserName = "John Doe",
                            CreatedDate = new DateTime(2025, 3, 21, 20, 9, 9, 967, DateTimeKind.Local).AddTicks(1825),
                            ExpiryMonth = 11,
                            ExpiryYear = 2025,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Balance = 5000m,
                            CVC = "321",
                            CardLimit = 5000m,
                            CardNumber = "9876543210987654",
                            CardUserName = "Jane Doe",
                            CreatedDate = new DateTime(2025, 3, 21, 20, 9, 9, 968, DateTimeKind.Local).AddTicks(1762),
                            ExpiryMonth = 10,
                            ExpiryYear = 2023,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            Balance = 4000m,
                            CVC = "601",
                            CardLimit = 4000m,
                            CardNumber = "4111111111111111",
                            CardUserName = "Kevin Nea",
                            CreatedDate = new DateTime(2025, 3, 21, 20, 9, 9, 968, DateTimeKind.Local).AddTicks(1768),
                            ExpiryMonth = 1,
                            ExpiryYear = 2023,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            Balance = 3200m,
                            CVC = "922",
                            CardLimit = 3200m,
                            CardNumber = "5555555555554444",
                            CardUserName = "Sue Mayre",
                            CreatedDate = new DateTime(2025, 3, 21, 20, 9, 9, 968, DateTimeKind.Local).AddTicks(1770),
                            ExpiryMonth = 6,
                            ExpiryYear = 2023,
                            Status = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
